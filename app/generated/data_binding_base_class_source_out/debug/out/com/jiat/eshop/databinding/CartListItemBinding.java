// Generated by view binder compiler. Do not edit!
package com.jiat.eshop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jiat.eshop.R;
import com.travijuu.numberpicker.library.NumberPicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button cartListItemDelete;

  @NonNull
  public final ImageView cartListItemImage;

  @NonNull
  public final TextView cartListItemName;

  @NonNull
  public final TextView cartListItemPrice;

  @NonNull
  public final NumberPicker cartListItemQuantityUpdate;

  private CartListItemBinding(@NonNull LinearLayout rootView, @NonNull Button cartListItemDelete,
      @NonNull ImageView cartListItemImage, @NonNull TextView cartListItemName,
      @NonNull TextView cartListItemPrice, @NonNull NumberPicker cartListItemQuantityUpdate) {
    this.rootView = rootView;
    this.cartListItemDelete = cartListItemDelete;
    this.cartListItemImage = cartListItemImage;
    this.cartListItemName = cartListItemName;
    this.cartListItemPrice = cartListItemPrice;
    this.cartListItemQuantityUpdate = cartListItemQuantityUpdate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CartListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cart_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cart_list_item_delete;
      Button cartListItemDelete = ViewBindings.findChildViewById(rootView, id);
      if (cartListItemDelete == null) {
        break missingId;
      }

      id = R.id.cart_list_item_image;
      ImageView cartListItemImage = ViewBindings.findChildViewById(rootView, id);
      if (cartListItemImage == null) {
        break missingId;
      }

      id = R.id.cart_list_item_name;
      TextView cartListItemName = ViewBindings.findChildViewById(rootView, id);
      if (cartListItemName == null) {
        break missingId;
      }

      id = R.id.cart_list_item_price;
      TextView cartListItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (cartListItemPrice == null) {
        break missingId;
      }

      id = R.id.cart_list_item_quantity_update;
      NumberPicker cartListItemQuantityUpdate = ViewBindings.findChildViewById(rootView, id);
      if (cartListItemQuantityUpdate == null) {
        break missingId;
      }

      return new CartListItemBinding((LinearLayout) rootView, cartListItemDelete, cartListItemImage,
          cartListItemName, cartListItemPrice, cartListItemQuantityUpdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
